name: "release-plz"
author: "Marco Ieni"
description: "Update version and changelog based on semantic versioning and conventional commits"
inputs:
  command:
    description: "The release-plz command to run. Accepted values: `release-pr`, `release`. If unspecified, this action runs both these commands."
    required: false
  registry:
    description: "Registry where the packages are stored. The registry name needs to be present in the Cargo config. If unspecified, crates.io is used."
    required: false
  project_manifest:
    description: "Path to the Cargo.toml of the project you want to update. If not provided, release-plz will use the Cargo.toml of the
            root directory. Both Cargo workspaces and single packages are supported."
    required: false
  version:
    description: "Release-plz version to use. It must be an existing git tag name. For example `release-plz-v0.2.45`. (Default: `latest`)."
    default: "release-plz-v0.3.21"
    required: false
branding:
  icon: "zap"
  color: "yellow"
runs:
  using: "composite"
  steps:
    - name: Install cargo-semver-checks
      uses: jaxxstorm/action-install-gh-release@v1.10.0
      with:
        repo: obi1kenobi/cargo-semver-checks
        tag: v0.23.0
        cache: enable
    - name: Install release-plz
      uses: jaxxstorm/action-install-gh-release@v1.10.0
      with:
        repo: MarcoIeni/release-plz
        tag: ${{ inputs.version }}
        cache: enable
    - run: |
        if [ -z "${CARGO_REGISTRY_TOKEN-unset}" ]
        then
            echo "\$CARGO_REGISTRY_TOKEN environment variable is set to empty string. Please set your token in GitHub actions secrets. Docs: https://marcoieni.github.io/release-plz/github/index.html"
            exit 1
        fi
        if [[ -n "${{ inputs.registry }}" ]]
        then
            echo "using registry '${{ inputs.registry }}'"
            ALT_REGISTRY="--registry ${{ inputs.registry }}"
        else
            ALT_REGISTRY=""
        fi

        if [[ -n "${{ inputs.project_manifest }}" ]]
        then
            echo "using project manifest '${{ inputs.project_manifest }}'"
            PROJECT_MANIFEST="--project-manifest ${{ inputs.project_manifest }}"
        else
            PROJECT_MANIFEST=""
        fi

        git config --global user.email "release-plz@github.com"
        git config --global user.name "release-plz"

        if [[ -z "${{ inputs.command }}" || "${{ inputs.command }}" == "release-pr" ]]
        then
        echo "-- Running release-plz release-pr --"
        release-plz release-pr\
            --git-token ${GITHUB_TOKEN}\
            --repo-url https://github.com/${GITHUB_REPOSITORY}\
            ${ALT_REGISTRY}\
            ${PROJECT_MANIFEST}
        fi

        if [[ -z "${{ inputs.command }}" || "${{ inputs.command }}" == "release" ]]
        then
        echo "-- Running release-plz release --"
        release-plz release\
            --git-token ${GITHUB_TOKEN}\
            ${ALT_REGISTRY}\
            ${PROJECT_MANIFEST}
        fi
      shell: bash
